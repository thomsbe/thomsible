---
# Modern Tools Role
# Installiert moderne CLI-Tools f√ºr den target_user
# Jedes Tool hat eine eigene Datei f√ºr bessere Organisation

- name: "Validate target_user is defined"
  ansible.builtin.fail:
    msg: |
      target_user muss explizit definiert werden!
      Beispiel: -e "target_user=thomas"
  when: target_user is not defined or target_user == ""

- name: "Get target user information"
  ansible.builtin.getent:
    database: passwd
    key: "{{ target_user }}"
  register: target_user_info

- name: "Set target user home directory"
  ansible.builtin.set_fact:
    target_user_home: "{{ target_user_info.ansible_facts.getent_passwd[target_user][4] }}"

- name: "Generate tools lists"
  ansible.builtin.set_fact:
    tools_to_install: "{{ tools_config | dict2items | selectattr('value.enabled', 'equalto', true) | map(attribute='key') | list }}"
    tools_with_aliases: "{{ tools_config | dict2items | selectattr('value.alias', 'defined') | selectattr('value.enabled', 'equalto', true) | list }}"
    system_tools_to_install: "{{ system_tools | dict2items | selectattr('value.enabled', 'equalto', true) | map(attribute='key') | list }}"

- name: "Display modern tools configuration"
  ansible.builtin.debug:
    msg: |
      üõ†Ô∏è MODERN TOOLS INSTALLATION
      Target User: {{ target_user }}
      Home: {{ target_user_home }}
      Install Path: {{ target_user_home }}/{{ github_tools_install_path }}
      Tools to install: {{ tools_to_install | length }} tools

- name: "Install required packages for Ansible on Fedora"
  ansible.builtin.dnf:
    name:
      - python3-libdnf5  # Required for Ansible dnf module
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution == "Fedora"

- name: "Ensure install directory exists"
  ansible.builtin.file:
    path: "{{ target_user_home }}/{{ github_tools_install_path }}"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'

# Dynamic GitHub Tools Installation
# Uses centralized tools_config from defaults/main.yml
- name: "Install GitHub tools"
  ansible.builtin.include_tasks: "tools/{{ tool_item.key }}.yml"
  loop: "{{ tools_config | dict2items | selectattr('value.enabled', 'equalto', true) }}"
  loop_control:
    loop_var: tool_item
  vars:
    tool_name: "{{ tool_item.key }}"
    tool_config: "{{ tool_item.value }}"
  tags: 
    - github_tools

# System Tools
- name: "Install system tools"
  ansible.builtin.include_tasks: system_tools.yml
  when: install_system_tools | default(true)
  tags: [system_tools]

# Git configuration
- name: "Configure git"
  ansible.builtin.include_tasks: git_config.yml
  when: configure_git | default(true)
  tags: [git_config]

# Shell aliases and integrations
- name: "Setup shell aliases and integrations"
  ansible.builtin.include_tasks: shell_integration.yml
  when: setup_shell_integration | default(true)
  tags: [shell_integration, aliases]
