---
# Target User Configuration Role
# Konfiguriert den echten Benutzer (explizit definiert, keine Auto-Erkennung)
# - Fish shell als Standard
# - PATH-Konfiguration für ~/.local/bin
# - Basis-Verzeichnisse erstellen

- name: "Validate target_user is defined"
  ansible.builtin.fail:
    msg: "target_user must be explicitly defined! Example: -e 'target_user=thomas'. No auto-detection for security reasons!"
  when: target_user is not defined or target_user == ""

- name: "Get target user information (try local passwd first)"
  ansible.builtin.getent:
    database: passwd
    key: "{{ target_user }}"
  register: target_user_info
  failed_when: false

- name: "Get target user home from getent (fallback for SSSD/domain users)"
  ansible.builtin.shell: "getent passwd {{ target_user }} | cut -d: -f6"
  register: target_user_home_fallback
  failed_when: false
  when: target_user_info.failed | default(false)

- name: "Set target user home directory (local user)"
  ansible.builtin.set_fact:
    target_user_home: "{{ target_user_info.ansible_facts.getent_passwd[target_user][4] }}"
  when: not (target_user_info.failed | default(false))

- name: "Set target user home directory (SSSD/domain user)"
  ansible.builtin.set_fact:
    target_user_home: "{{ target_user_home_fallback.stdout }}"
  when:
    - target_user_info.failed | default(false)
    - target_user_home_fallback.rc == 0
    - target_user_home_fallback.stdout != ""

- name: "Set target user home directory (fallback to /home/username)"
  ansible.builtin.set_fact:
    target_user_home: "/home/{{ target_user }}"
  when:
    - target_user_info.failed | default(false)
    - (target_user_home_fallback.failed | default(false)) or (target_user_home_fallback.stdout == "")

- name: "Get target user group information"
  ansible.builtin.shell: "id -gn {{ target_user }}"
  register: target_user_group_result
  failed_when: false
  changed_when: false

- name: "Set target user group name"
  ansible.builtin.set_fact:
    target_user_group_name: "{{ target_user_group_result.stdout | default(target_user) }}"

- name: "Display target user configuration"
  ansible.builtin.debug:
    msg: |
      TARGET USER CONFIGURATION
      User: {{ target_user }}
      Home: {{ target_user_home }}
      Group: {{ target_user_group_name }}
      User type: {% if target_user_info.failed | default(false) %}SSSD/Domain user{% else %}Local user{% endif %}
      Shell will be set to fish (except root)

- name: "Install required packages for Ansible on Fedora"
  ansible.builtin.dnf:
    name:
      - python3-libdnf5  # Required for Ansible dnf module
      - fish
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution == "Fedora"

- name: "Install fish shell (Debian/Ubuntu)"
  ansible.builtin.package:
    name: fish
    state: present
  when: ansible_os_family == "Debian"

- name: "Set fish as default shell for target user (local users only)"
  ansible.builtin.user:
    name: "{{ target_user }}"
    shell: /usr/bin/fish
  when:
    - target_user != "root"
    - not (target_user_info.failed | default(false))  # Only for local users
  register: shell_change_result
  failed_when: false

- name: "Display shell setting result for local user"
  ansible.builtin.debug:
    msg: "✅ Fish shell set as default for local user {{ target_user }}"
  when:
    - target_user != "root"
    - not (target_user_info.failed | default(false))
    - shell_change_result.changed | default(false)

- name: "Display shell setting info for domain user"
  ansible.builtin.debug:
    msg: |
      ⚠️ Cannot set default shell for SSSD/domain user {{ target_user }}
      Fish shell is installed and configured, but default shell remains unchanged.
      User can manually switch to fish by running 'fish' command.
  when:
    - target_user != "root"
    - target_user_info.failed | default(false)

- name: "Create .config directory for target user"
  ansible.builtin.file:
    path: "{{ target_user_home }}/.config"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'

- name: "Create fish config directory for target user"
  ansible.builtin.file:
    path: "{{ target_user_home }}/.config/fish"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'

- name: "Create .local/bin directory for target user"
  ansible.builtin.file:
    path: "{{ target_user_home }}/.local/bin"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'

- name: "Add .local/bin to PATH in fish config"
  ansible.builtin.copy:
    dest: "{{ target_user_home }}/.config/fish/config.fish"
    content: |
      # Add .local/bin to PATH for modern CLI tools
      if test -d $HOME/.local/bin
          set -gx PATH $HOME/.local/bin $PATH
      end
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0644'

- name: "Add .local/bin to PATH in bash profile"
  ansible.builtin.lineinfile:
    path: "{{ target_user_home }}/.bashrc"
    line: 'export PATH="$HOME/.local/bin:$PATH"'
    regexp: '.*\.local/bin.*'
    create: true
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0644'

- name: "Add .local/bin to PATH in bash profile (alternative)"
  ansible.builtin.lineinfile:
    path: "{{ target_user_home }}/.bash_profile"
    line: 'export PATH="$HOME/.local/bin:$PATH"'
    regexp: '.*\.local/bin.*'
    create: true
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0644'

- name: "Create tools directory for target user"
  ansible.builtin.file:
    path: "{{ target_user_home }}/tools"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'

- name: "Create managed marker file"
  ansible.builtin.copy:
    dest: "{{ target_user_home }}/.config/thomsible_managed"
    content: |
      # This user was configured by thomsible
      # Target user: {{ target_user }}
      # Managed by: {{ ansible_user_id }}
      # Date: {{ ansible_date_time.iso8601 }}
      # Role: target_user_config
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0644'
