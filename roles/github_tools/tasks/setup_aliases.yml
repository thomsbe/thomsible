---
# Setup shell aliases for GitHub tools
# This task creates aliases for tools that have an 'alias' configuration

- name: "Collect tools with aliases"
  ansible.builtin.set_fact:
    tools_with_aliases: >-
      {{
        github_tools_to_install |
        map('extract', github_tools_available) |
        selectattr('alias', 'defined') |
        list
      }}

- name: "Display tools with aliases"
  ansible.builtin.debug:
    msg: |
      Setting up aliases for {{ tools_with_aliases | length }} tools:
      {% for tool in tools_with_aliases %}
      - {{ tool.alias }} -> {{ github_tools_to_install[loop.index0] }} ({{ tool.description }})
      {% endfor %}
  when: tools_with_aliases | length > 0

- name: "Create fish config directory"
  ansible.builtin.file:
    path: "{{ target_user_home }}/.config/fish/conf.d"
    state: directory
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0755'
  when: tools_with_aliases | length > 0

- name: "Create fish aliases file"
  ansible.builtin.template:
    src: fish_aliases.fish.j2
    dest: "{{ github_tools_fish_aliases_file }}"
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0644'
  when: tools_with_aliases | length > 0

- name: "Create bash aliases file"
  ansible.builtin.template:
    src: bash_aliases.j2
    dest: "{{ github_tools_bash_aliases_file }}"
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0644'
  when: tools_with_aliases | length > 0

- name: "Ensure bash aliases are sourced in .bashrc"
  ansible.builtin.lineinfile:
    path: "{{ target_user_home }}/.bashrc"
    line: "[ -f ~/.bash_aliases ] && . ~/.bash_aliases"
    regexp: ".*bash_aliases.*"
    state: present
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    create: yes
  when: tools_with_aliases | length > 0

- name: "Setup starship configuration"
  ansible.builtin.template:
    src: starship.toml.j2
    dest: "{{ target_user_home }}/.config/starship.toml"
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: '0644'
  when: "'starship' in github_tools_to_install"

- name: "Initialize starship in bash"
  ansible.builtin.lineinfile:
    path: "{{ target_user_home }}/.bashrc"
    line: 'eval "$({{ target_user_home }}/local/bin/starship init bash)"'
    regexp: ".*starship init bash.*"
    state: present
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    create: yes
  when: "'starship' in github_tools_to_install"

- name: "Initialize starship in fish"
  ansible.builtin.lineinfile:
    path: "{{ target_user_home }}/.config/fish/config.fish"
    line: '{{ target_user_home }}/local/bin/starship init fish | source'
    regexp: ".*starship init fish.*"
    state: present
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    create: yes
  when: "'starship' in github_tools_to_install"

- name: "Display alias setup summary"
  ansible.builtin.debug:
    msg: |
      ‚úÖ Shell aliases configured successfully!

      üìÅ Configuration files:
      - Fish: {{ github_tools_fish_aliases_file }}
      - Bash: {{ github_tools_bash_aliases_file }}

      üîß Configured aliases:
      {% for tool in tools_with_aliases %}
      - {{ tool.alias }} -> {{ github_tools_to_install[loop.index0] }}
      {% endfor %}

      {% if 'starship' in github_tools_to_install %}
      üé® Starship prompt configured:
      - Custom Gruvbox theme with OS, Git, and language info
      - Cross-shell support (Fish + Bash)
      - Configuration: ~/.config/starship.toml
      {% endif %}

      üí° Usage:
      - New shells will automatically load the aliases
      - Current shells: source the alias files or restart shell

      üöÄ Modern CLI environment ready!
  when: tools_with_aliases | length > 0

- name: "Display no aliases message"
  ansible.builtin.debug:
    msg: |
      ‚ÑπÔ∏è  No aliases configured

      To enable aliases:
      1. Set github_tools_create_aliases: true
      2. Install tools with alias configuration (bat, eza)

      Available tools with alias support:
      - bat (replaces cat)
      - eza (replaces ls)
  when: tools_with_aliases | length == 0
