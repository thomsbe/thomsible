---
# Tools-Only Bootstrap Playbook - Alle Tools ohne Ansible-User
# Dieses Playbook installiert ALLE verf√ºgbaren GitHub-Tools und Konfiguration
# ohne einen separaten Ansible-Benutzer oder SSH-Konfiguration zu erstellen.
#
# Unterschied zu bootstrap_local.yml:
# - Keine thomsible_user Rolle (kein Ansible-Benutzer)
# - Keine ssh_keys Rolle (keine SSH-Konfiguration)
# - Aber ALLE 18 GitHub Tools werden installiert
#
# Verwendung:
#   ./bootstrap.sh --tools-only
#   ansible-playbook bootstrap_tools_only.yml --ask-become-pass
#   ansible-playbook bootstrap_tools_only.yml -e "target_user=thomas" --ask-become-pass

- name: "Install modern CLI tools locally"
  hosts: localhost
  connection: local
  become: true
  gather_facts: true

  vars:
    # Ziel-Benutzer (Standard: echter Benutzer, nicht sudo-Benutzer)
    target_user: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"

    # Vollst√§ndige Tool-Auswahl (alle verf√ºgbaren GitHub Tools)
    github_tools_to_install:
      - lazygit      # Git Terminal UI
      - starship     # Modern prompt
      - btop         # System monitor
      - fzf          # Fuzzy finder
      - bat          # Better cat
      - eza          # Better ls
      - fd           # Better find
      - ripgrep      # Better grep
      - dust         # Better du
      - procs        # Better ps
      - zoxide       # Smart cd
      - mcfly        # AI history search
      - tealdeer     # Fast man pages
      - duf          # Better df
      - gping        # Ping with graph
      - dog          # Better dig
      - termshark    # Terminal Wireshark
      - topgrade     # System updater

    # Aliases f√ºr bessere UX
    github_tools_create_aliases: true

    # Konflikt-Erkennung
    github_tools_check_conflicts: true

  pre_tasks:
    - name: "Display installation info"
      ansible.builtin.debug:
        msg: |
          üõ†Ô∏è  COMPLETE CLI TOOLS INSTALLATION üõ†Ô∏è

          Target user: {{ target_user }}
          Tools to install: {{ github_tools_to_install | length }} modern CLI tools
          Installation path: ~/.local/bin

          This installs ALL available GitHub tools without creating
          an Ansible user or SSH configuration (tools-only mode).

    - name: "Get target user information"
      ansible.builtin.getent:
        database: passwd
        key: "{{ target_user }}"
      register: target_user_info

    - name: "Set target user home directory"
      ansible.builtin.set_fact:
        target_user_home: "{{ target_user_info.ansible_facts.getent_passwd[target_user][4] }}"

  roles:
    - role: user_config
    - role: git
    - role: github_tools

  post_tasks:
    - name: "Installation completed"
      ansible.builtin.debug:
        msg: |
          ‚úÖ ALL CLI TOOLS INSTALLED! ‚úÖ

          üì¶ Installed {{ github_tools_to_install | length }} modern tools:
          System: btop, procs, duf, dust, topgrade
          Files: bat, fd, eza, ripgrep
          Navigation: fzf, zoxide
          Development: lazygit, starship
          Productivity: mcfly, tealdeer
          Network: gping, dog, termshark

          üêö Shell configuration:
          - Fish shell configured with PATH
          - Bash profile updated with PATH
          {% if github_tools_create_aliases %}
          - Aliases: bat‚Üícat, eza‚Üíls, rg‚Üígrep
          {% endif %}

          üé® Starship prompt configured with custom theme

          üöÄ Quick start:
          1. Restart your shell: exec $SHELL
          2. Try: lazygit, btop, mcfly, bat README.md
          3. Use Ctrl+R for AI-powered history search (mcfly)
          4. Use 'z' for smart directory jumping (zoxide)

          üí° All {{ github_tools_to_install | length }} tools are in ~/.local/bin and added to your PATH!
