---
# Bootstrap Playbook f√ºr lokale Maschinen
# Dieses Playbook ist daf√ºr gedacht, direkt auf der lokalen Maschine ausgef√ºhrt zu werden
# um eine komplette Entwicklungsumgebung einzurichten.
#
# Verwendung:
#   ansible-playbook bootstrap_local.yml
#   ansible-playbook bootstrap_local.yml -e "target_user=thomas"
#   ansible-playbook bootstrap_local.yml -e "skip_ansible_user=true"

- name: "Bootstrap local machine with thomsible tools"
  hosts: localhost
  connection: local
  become: true
  gather_facts: true

  vars:
    # Standard-Konfiguration f√ºr lokale Installation
    # WICHTIG: target_user sollte NICHT der echte Benutzer sein, wenn SSH-Keys konfiguriert werden!
    # F√ºr lokale Installation besser explizit setzen oder skip_ansible_user=true verwenden
    target_user: "{{ target_user | default(ansible_env.SUDO_USER | default(ansible_user_id)) }}"
    skip_ansible_user: false  # Ansible-Benutzer trotzdem erstellen?

    # GitHub Tools die installiert werden sollen
    github_tools_to_install:
      - lazygit
      - starship
      - btop
      - fzf
      - bat
      - eza
      - fd
      - ripgrep
      - dust
      - procs
      - zoxide
      - atuin
      - tealdeer
      - duf
      - gping
      - dog
      - termshark
      - topgrade

    # Aliases aktivieren f√ºr moderne CLI-Erfahrung
    github_tools_create_aliases: true

    # Konflikt-Erkennung aktiviert
    github_tools_check_conflicts: true

  pre_tasks:
    - name: "Display bootstrap information"
      ansible.builtin.debug:
        msg: |
          üöÄ THOMSIBLE LOCAL BOOTSTRAP üöÄ

          Target machine: {{ inventory_hostname }}
          Current user: {{ ansible_user_id }}
          Target user: {{ target_user }}
          OS: {{ ansible_distribution }} {{ ansible_distribution_version }}

          This will install:
          - Ansible automation user ({{ ansible_user_name | default('thomsible') }})
          - SSH configuration for target user
          - Fish shell and modern PATH configuration
          - Git with user configuration
          - {{ github_tools_to_install | length }} modern CLI tools
          - Shell aliases and starship prompt

          Press Ctrl+C to abort if this is not what you want.

    - name: "Pause for confirmation"
      ansible.builtin.pause:
        prompt: "Continue with bootstrap? (Press Enter to continue, Ctrl+C to abort)"
        seconds: 10

    - name: "Get target user information"
      ansible.builtin.getent:
        database: passwd
        key: "{{ target_user }}"
      register: target_user_info

    - name: "Set target user home directory"
      ansible.builtin.set_fact:
        target_user_home: "{{ target_user_info.ansible_facts.getent_passwd[target_user][4] }}"

    - name: "Verify we're running as root or with sudo"
      ansible.builtin.fail:
        msg: |
          This playbook needs to be run with sudo privileges.
          Please run: sudo ansible-playbook bootstrap_local.yml
      when: ansible_user_id != "root" and ansible_become_user is not defined

  roles:
    # Phase 1: Ansible-Benutzer erstellen (optional)
    - role: thomsible_user
      when: not (skip_ansible_user | bool)

    # Phase 2: Ziel-Benutzer konfigurieren
    # WARNUNG: ssh_keys Rolle f√ºr lokale Installation √ºbersprungen!
    # Sie w√ºrde den lokalen Benutzer-Login sperren
    # - role: ssh_keys  # NUR f√ºr Remote-Systeme verwenden!
    - role: user_config
    - role: git
    - role: github_tools

  post_tasks:
    - name: "Bootstrap completion summary"
      ansible.builtin.debug:
        msg: |
          ‚úÖ BOOTSTRAP COMPLETED SUCCESSFULLY! ‚úÖ

          üéØ What was installed:
          - Target user configured: {{ target_user }}
          - Home directory: {{ target_user_home }}
          - Fish shell with modern PATH configuration
          - Git configured for {{ target_user }}
          - {{ github_tools_to_install | length }} GitHub CLI tools in ~/.local/bin
          {% if github_tools_create_aliases %}
          - Shell aliases for modern commands (bat‚Üícat, eza‚Üíls)
          {% endif %}
          {% if not (skip_ansible_user | bool) %}
          - Ansible automation user: {{ ansible_user_name | default('thomsible') }}
          {% endif %}

          üöÄ Next steps:
          1. Logout and login again (or restart shell)
          2. Verify tools: lazygit --version, btop --version, etc.
          3. Enjoy your modern CLI environment!

          üí° Useful commands:
          - lazygit: Terminal UI for Git
          - btop: Modern system monitor
          - fzf: Fuzzy finder (Ctrl+R for history)
          - bat: Better cat with syntax highlighting
          - eza: Modern ls replacement
          - starship: Beautiful shell prompt

          üìö Documentation: README.md and docs/ folder

    - name: "Show PATH verification"
      ansible.builtin.debug:
        msg: |
          üîç PATH Verification:

          To verify tools are in PATH, run as {{ target_user }}:
          echo $PATH | grep -o '[^:]*\.local/bin[^:]*'

          Test a few tools:
          lazygit --version
          btop --version
          starship --version
