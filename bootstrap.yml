---
# New Bootstrap Playbook für thomsible
# Neue 3-Rollen-Struktur mit expliziter Benutzer-Definition
#
# Verwendung:
#   ansible-playbook bootstrap_new.yml -e "target_user=thomas"
#   ansible-playbook bootstrap_new.yml -e "target_user=thomas" --tags "target_user_config"
#   ansible-playbook bootstrap_new.yml -e "target_user=thomas" --tags "modern_tools"

- name: "Thomsible Bootstrap - New Structure"
  hosts: localhost
  connection: local
  become: true
  gather_facts: true

  vars:
    # WICHTIG: target_user muss explizit gesetzt werden!
    # Beispiel: -e "target_user=thomas"

    # Service User Konfiguration
    ansible_user_name: "thomsible"
    ansible_user_ssh_pubkey: "{{ lookup('env', 'THOMSIBLE_SSH_KEY') | default('ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIaQP9YHqJ3Lq8yrqPHOT6HyVsYhp/QhgGkyo8pQ6qlm thomsible') }}"

    # Modern Tools werden jetzt aus defaults/main.yml der modern_tools Rolle geladen
    # Alle Tools sind standardmäßig aktiviert
    # Einzelne Tools können deaktiviert werden mit:
    # tools_config:
    #   termshark:
    #     enabled: false

    # Features aktivieren
    create_shell_aliases: true
    install_system_tools: true
    configure_git: true
    setup_shell_integration: true
    github_tools_check_conflicts: true

    # GitHub Token (optional für höhere API-Limits)
    github_token: "{{ lookup('env', 'GITHUB_TOKEN', default='') }}"

    # Starship Konfiguration kommt aus yast dotfile sync

  pre_tasks:
    - name: "Validate target_user is defined"
      ansible.builtin.fail:
        msg: "target_user must be explicitly defined! Examples: ansible-playbook bootstrap.yml -e 'target_user=thomas'. No auto-detection for security reasons!"
      when: target_user is not defined or target_user == ""

    - name: "Display bootstrap configuration"
      ansible.builtin.debug:
        msg: "THOMSIBLE BOOTSTRAP - Target: {{ target_user }}@{{ inventory_hostname }} ({{ ansible_distribution }} {{ ansible_distribution_version }}), Service user: {{ ansible_user_name }}, Will create service user, configure target user with fish shell, install modern CLI tools, setup shell integrations"

    - name: "Pause for confirmation"
      ansible.builtin.pause:
        prompt: "Continue with bootstrap? (Press Enter to continue, Ctrl+C to abort)"
        seconds: 10

  roles:
    # Phase 1: Service User (Ansible Automation)
    - role: service_user
      tags: [service_user, phase1]
      when: create_service_user | default(true)

    # Phase 2: Target User Configuration
    - role: target_user_config
      tags: [target_user_config, phase2]

    # Phase 3: Modern Tools Installation
    - role: modern_tools
      tags: [modern_tools, phase3]

  post_tasks:
    - name: "Bootstrap completion summary"
      ansible.builtin.debug:
        msg: "BOOTSTRAP COMPLETED SUCCESSFULLY! Configured: {% if create_service_user | default(true) %}service user {{ ansible_user_name }}, {% endif %}target user {{ target_user }} with fish shell, modern CLI tools{% if create_shell_aliases %}, shell aliases{% endif %}, git config, system tools. Next: logout/login, test tools, setup atuin"

    - name: "Show useful commands"
      ansible.builtin.debug:
        msg: "Useful commands: lazygit (git UI), btop (monitor), bat (cat), eza (ls), fd (find), rg (grep), dust (du), duf (df), z (cd), atuin search (history), tg (update), tldr (help)"
